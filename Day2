Day 2
Q.N 1  : 69. Sqrt(x)

class Solution {
public:
    int mySqrt(int x) {

        if(x<2)
        return x;
        int start =0,end= x,mid,ans;

        while(start<=end)
        {
            mid= start+ (end-start)/2;

            if(mid==x/mid)
            {
                ans=mid;
                break;
            }
            else if(mid<x/mid)
            {
            ans=mid; 
            start =mid+1;
            }
            else
            end=mid-1;
        }  
        return ans;
    }
};


Q.N 2
852. Peak Index in a Mountain Array


class Solution {
public:
    int peakIndexInMountainArray(vector<int>& arr) {

       // 1 6 4 2 3  
       // 1 6 3 2 1
        int start=0,end= arr.size()-1,mid;
        while(start<=end)
        {
            mid =end+(start-end)/2;
//Peak Element
            if(arr[mid]>arr[mid-1] && arr[mid]>arr[mid+1])
            return mid;
//right side move
            else if(arr[mid]>arr[mid-1])
            start =mid+1;
//Left side move
            else         //arr[mid]<arr[mid-1]   
            end =mid-1;
        }
        return -1; 
    }
};
